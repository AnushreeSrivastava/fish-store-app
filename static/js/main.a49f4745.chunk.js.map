{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","index.js"],"names":["Header","props","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","fishes","count","orders","removeButton","onClick","removeFromOrder","status","name","price","orderIds","Object","keys","this","total","reduce","prevTotal","map","React","Component","AddFishForm","createFish","e","preventDefault","value","desc","image","addFish","fishForm","reset","ref","input","onSubmit","type","placeholder","app","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","authHandler","authData","a","fetch","storeId","context","store","owner","post","data","user","uid","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","catch","error","console","log","logOut","signOut","handleChange","updatedFish","target","updateFish","renderInventory","onChange","removeFish","renderLogin","state","onAuthStateChanged","loadSamples","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","isAvailable","buttonText","src","alt","addToOrder","index","disabled","App","sampleFishes","timestamp","Date","now","syncState","match","params","localStorageRef","localStorage","getItem","JSON","parse","nextProps","nextState","setItem","stringify","removeBinding","StorePicker","goToStore","storeInput","history","push","required","defaultValue","contextTypes","router","PropTypes","object","NotFound","Root","BrowserRouter","basename","process","Switch","Route","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.a49f4745.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n//this is a stateless functional component.\r\n//Functional comp are helpful when there is not much data involvement.\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"top\">\r\n            <h1>\r\n                Catch\r\n                <span className=\"ofThe\">\r\n                    <span className=\"of\">of</span>\r\n                    <span className=\"the\">the</span>\r\n                </span>\r\n                 Day</h1>\r\n            {/* Here this is refering to the Header class/component and props is an object of that class\r\n            ,from which we can access its property tagline (props.tagline) */}\r\n            <h3 className=\"tagline\"><span>{props.tagline}</span></h3>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\nexport default Header;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n// import { CSSTransitionGroup } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.orders[key];\r\n        const removeButton = <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n\r\n        if (!fish || fish.status == 'unavailable') {\r\n            return <li key={key}>Sorry, {fish ? fish.name : 'fish'} is no longer available! {removeButton} </li>\r\n        }\r\n\r\n        return (\r\n            <li key={key}>\r\n                <span>{count} lbs {fish.name} {removeButton}</span>\r\n                <span className=\"price\">{formatPrice(fish.price * count)} </span>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //since this.props,orders get passed down as object.We need it in array form\r\n        const orderIds = Object.keys(this.props.orders);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.orders[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if (isAvailable) {\r\n                return prevTotal + (count * fish.price || 0);\r\n            }\r\n        }, 0)\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Your Orders</h2>\r\n                <ul className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                    <li className=\"total\">\r\n                        <strong>Total:</strong>\r\n                        {formatPrice(total)}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nOrder.propTypes = {\r\n    fishes: PropTypes.object.isRequired,\r\n    orders: PropTypes.object.isRequired,\r\n    removeFromOrder: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    createFish = (e) => {\r\n        e.preventDefault();\r\n        const fish = {\r\n            name: this.name.value,\r\n            price: this.price.value,\r\n            status: this.status.value,\r\n            desc: this.desc.value,\r\n            image: this.image.value\r\n        }\r\n        this.props.addFish(fish);\r\n        this.fishForm.reset();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form ref={(input => this.fishForm = input)} className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input type=\"text\" ref={(input) => this.name = input} placeholder=\"Fish Name\" />\r\n                <input type=\"text\" ref={(input) => this.price = input} placeholder=\"Fish Price\" />\r\n                <select ref={(input) => this.status = input}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n\r\n                <textarea ref={(input) => this.desc = input} placeholder=\"Fish Desc\" />\r\n                <input type=\"text\" ref={(input) => this.image = input} placeholder=\"Fish Image\" />\r\n                <button type=\"submit\">+ Add Items</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nAddFishForm.propTypes = {\r\n    addFish: PropTypes.func.isRequired\r\n}\r\nexport default AddFishForm;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\n//create connection to the firebase db\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDcCBW1ygISPIns9eoecpiQin6XsI0NVn8\",\r\n    authDomain: \"catch-of-the-day-f8742.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-f8742.firebaseio.com\"\r\n}\r\nconst app = firebase.initializeApp(config);\r\nconst base = Rebase.createClass(app.database());\r\n\r\nexport default base;","import React from 'react';\r\nimport AddFishForm from './AddFishForm';\r\nimport PropTypes from 'prop-types';\r\nimport base from '../base';\r\nimport firebase from 'firebase';\r\n\r\nclass Inventory extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        //initial state or getinitialstate in ES5\r\n        this.state = {\r\n            uid: null,\r\n            owner: null\r\n        }\r\n    }\r\n\r\n    //to retain user data when user refreshes\r\n    //ON pageload firebase will try to authenticate immidiately afer the component is mounted on DOM\r\n    //and user data is populated\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.authHandler({ user });\r\n            }\r\n        });\r\n    }\r\n\r\n    authHandler = async authData => {\r\n\r\n        // 1. Look up the currentstore in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n\r\n        // 2. Claim it if there is no owner\r\n        if (!store.owner) {\r\n            // save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n\r\n    }\r\n\r\n    authenticate = (provider) => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler)\r\n            .catch(error => {\r\n                console.log(`Sorry there was some error: ${error}`);\r\n            });\r\n    }\r\n\r\n    logOut = () => {\r\n        console.log(\"logging out\");\r\n        firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    };\r\n\r\n    handleChange = (e, key) => {\r\n        const fish = this.props.fishes[key];\r\n        const updatedFish = {\r\n            ...fish,\r\n            [e.target.name]: e.target.value\r\n        }\r\n        this.props.updateFish(key, updatedFish);\r\n    }\r\n\r\n    renderInventory = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        return (\r\n            <div className=\"fish-edit\" key={key}>\r\n                <input type=\"text\" name=\"name\" value={fish.name} placeholder=\"Fish Name\"\r\n                    onChange={(e) => this.handleChange(e, key)} />\r\n                <input type=\"text\" name=\"price\" value={fish.price} placeholder=\"Fish Price\"\r\n                    onChange={(e) => this.handleChange(e, key)} />\r\n                <select name=\"status\" value={fish.status} placeholder=\"Fish Status\"\r\n                    onChange={(e) => this.handleChange(e, key)}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea type=\"text\" name=\"desc\" value={fish.desc} placeholder=\"Fish Desc\" onChange={(e) => this.handleChange(e, key)} />\r\n                <input type=\"text\" name=\"image\" value={fish.image} placeholder=\"Fish Image\" onChange={(e) => this.handleChange(e, key)} />\r\n                <button onClick={() => this.props.removeFish(key)}>Remove Fish</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderLogin = () => {\r\n        return (\r\n            <nav className=\"login\">\r\n                <h2>Inventory</h2>\r\n                <p>Sign in to manage your store's inventory</p>\r\n                <button className=\"github\" onClick={() => this.authenticate('Github')}>Log In with Github</button>\r\n                <button className=\"facebook\" onClick={() => this.authenticate('Facebook')}>Log In with Facebook</button>\r\n                <button className=\"twitter\" onClick={() => this.authenticate('Twitter')}>Log In with Twitter</button>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const logOut = <button onClick={this.logOut}>Log out!</button>\r\n        //check if they are logged in at all\r\n        if (!this.state.uid) {\r\n            return (<div>{this.renderLogin()}</div>)\r\n        }\r\n\r\n        //check if they are the owner of the current store\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you aren't owner of the store</p>\r\n                    {logOut}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>Inventory</h2>\r\n                {logOut}\r\n                {Object.keys(this.props.fishes).map(this.renderInventory)}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSamples}>Load Sample Fishes</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    static propTypes = {\r\n        fishes: PropTypes.object.isRequired,\r\n        addFish: PropTypes.func.isRequired,\r\n        loadSamples: PropTypes.func.isRequired,\r\n        removeFish: PropTypes.func.isRequired,\r\n        updateFish: PropTypes.func.isRequired,\r\n        storeId: PropTypes.string.isRequired\r\n    }\r\n}\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"../images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"../images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"../images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"../images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"../images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"../images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"../images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"../images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"../images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Fish extends React.Component {\r\n    render() {\r\n        //Destructuring the details into the variables for eaze of use\r\n        const { image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        const buttonText = isAvailable ? 'Add to Order' : 'Sold Out';\r\n        return (\r\n            <div>\r\n                <li className=\"menu-fish\">\r\n                    <img src={image} alt={name} />\r\n                    <h3 className=\"fish-name\">\r\n                        {name}\r\n                        {/*Use format price helper function to format price */}\r\n                        <span className=\"price\">{formatPrice(price)}</span>\r\n                    </h3>\r\n                    <p>{desc}</p>\r\n                    <button onClick={() => { this.props.addToOrder(this.props.index) }} disabled={!isAvailable}>{buttonText}</button>\r\n\r\n                </li>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFish.propTypes = {\r\n    details: PropTypes.object.isRequired,\r\n    index: PropTypes.string.isRequired,\r\n    addToOrder: PropTypes.func.isRequired\r\n}\r\nexport default Fish\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\nimport { render } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n//Prop is used to pass information from one tag to another\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        //initial state or getinitialstate in ES5\r\n    }\r\n\r\n    state = {\r\n        fishes: {},\r\n        orders: {}\r\n    };\r\n    //Store data into the firebase database before the component is rendered,so that each time user\r\n    //visits page with same data, it is synced before the component is rendered\r\n    componentWillMount() {\r\n        this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        })\r\n\r\n        //checks localstorage if orders data is there\r\n        const localStorageRef = localStorage.getItem(`order-${this.props.match.params.storeId}`);\r\n        if (localStorageRef) {\r\n            this.setState({\r\n                orders: JSON.parse(localStorageRef)\r\n            });\r\n        }\r\n    }\r\n\r\n    //This hook executes immidiately when there is an update in props or state\r\n    //Here we are storing the order data into the localstorage of browser when data is changed\r\n    componentDidUpdate(nextProps, nextState) {\r\n        localStorage.setItem(`order-${this.props.match.params.storeId}`, JSON.stringify(nextState.orders));\r\n    }\r\n    //remove the data binding from the database as soon as the component is \r\n    //unmounted(user moved to anoyther tabor close the window)\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    // Function to load sample fishes data from sample-fishes.js\r\n    loadSamples = () => {\r\n        this.setState({\r\n            fishes: sampleFishes\r\n        })\r\n    };\r\n\r\n    // Function to add a new fish data into the inventory\r\n    addFish = (fish) => {\r\n        //update our state  \r\n        //can be done as -> this.state.fishes.fish1 = fish, but it affects performance by \r\n        //directly changing the state\r\n        const fishes = { ...this.state.fishes };\r\n        const timestamp = Date.now();\r\n        //add in new fish\r\n        fishes[`fish-${timestamp}`] = fish;\r\n        //update the state to new state\r\n        this.setState({ fishes: fishes })\r\n\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        const fishes = { ...this.state.fishes };\r\n        fishes[key] = updatedFish;\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    removeFish = (key) => {\r\n        const fishes = { ...this.state.fishes };\r\n        fishes[key] = null;\r\n        this.setState({ fishes });\r\n    };\r\n    addToOrder = (key) => {\r\n        //Take a copy of state orders\r\n        const orders = { ...this.state.orders };\r\n        //increment or add order to the particular fish key\r\n        orders[key] = orders[key] + 1 || 1;\r\n        //update the state\r\n        this.setState({ orders });\r\n    };\r\n\r\n    removeFromOrder = (key) => {\r\n        const orders = { ...this.state.orders };\r\n        delete orders[key];\r\n        this.setState({ orders });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh seafood market\" />\r\n                    <ul className=\"list-of-fishes\">\r\n                        {/*to loop over the fishes state which is an object, \r\n                        we need to convert objects into the array by Object.keys() method. \r\n                        Then map each item to a component Fish */}\r\n                        {Object\r\n                            .keys(this.state.fishes)\r\n                            .map((key) => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />)}\r\n                    </ul>\r\n                </div>\r\n                <Order\r\n                    fishes={this.state.fishes}\r\n                    orders={this.state.orders}\r\n                    removeFromOrder={this.removeFromOrder}\r\n                    params={this.props.match.params}\r\n                />\r\n                {/*Send addFish and loadSamples as props to the inventory becoz state originally\r\n                 is in app.js only  */}\r\n                <Inventory\r\n                    addFish={this.addFish}\r\n                    loadSamples={this.loadSamples}\r\n                    fishes={this.state.fishes}\r\n                    updateFish={this.updateFish}\r\n                    removeFish={this.removeFish}\r\n                    storeId={this.props.match.params.storeId}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    params: PropTypes.object.isRequired\r\n}\r\nexport default App;","import React from 'react';\r\nimport { getFunName } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\n//best practice is to Write each compoent in different file\r\nclass StorePicker extends React.Component {\r\n\r\n    //Method to bind function to a class or use arrow func\r\n    // constructor(){\r\n    //     super();\r\n    //     this.goToStore = this.goToStore.bind(this);\r\n    // }\r\n\r\n    goToStore = (e) => {\r\n        e.preventDefault();\r\n        const storeId = this.storeInput.value;\r\n        //Grab the text from thhe box and redirect it to /store/:storeId\r\n        this.props.history.push(`/store/${storeId}`);\r\n\r\n    }\r\n\r\n    render() {\r\n        //All class components need to return JSX(javascript xml)\r\n        return (\r\n            //to write class, react doesnt allow =s us to write \"class\", we need to use \"className\"\r\n            //JSX return only one element, must have one root element\r\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                {/* This is how to write a comment inside jsx */}\r\n                <h2>Please enter a store</h2>\r\n                <input ref={(input) => { this.storeInput = input }} type=\"text\" required placeholder=\"Store Name\" defaultValue={getFunName()} />\r\n                <button type=\"submit\">Visit Store</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nStorePicker.contextTypes = {\r\n    router: PropTypes.object\r\n}\r\nexport default StorePicker;","import React from 'react';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <h2>NOT FOUND!!</h2>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { render } from 'react-dom'; //import only render method rather than whole reactDOM\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport './css/style.css';\r\nimport App from './components/App';\r\nimport StorePicker from './components/StorePicker';\r\nimport NotFound from './components/NotFound';\r\n\r\n\r\n//basename={process.env.PUBLIC_URL} is added to the browser router only to deploy at github pages\r\nconst Root = () => {\r\n\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={StorePicker} />\r\n                    <Route path=\"/store/:storeId\" component={App} />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n\r\n            </div>\r\n        </BrowserRouter >\r\n    )\r\n}\r\n\r\n//to render give 1st arg as name of the component and 2nd arg will dom element to be \r\n//rendered on(usually called mounting point (root/main))\r\nrender(<Root />, document.querySelector('#main'));\r\n"],"sourceRoot":""}